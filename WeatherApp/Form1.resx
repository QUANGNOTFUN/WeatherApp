<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBw8ODw8PDw8PDxAPDxAPDxAPEBUPEA8QFREWFhUVFRUY
        HSggGBolGxUVITEhJSkrLi4uFx8zODMsNygtLiv/2wBDAQoKCg4NDhoQEBotJSAlLS0tLS0tLSsrLS0t
        LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3/wAARCADNAPYDAREAAhEBAxEB/8QA
        GwAAAQUBAQAAAAAAAAAAAAAAAgABAwQFBgf/xAA8EAACAQIDBgMFBgUEAwEAAAABAgADEQQhMQUSQVFh
        cSKBkQYTUqGxMkKSwdHhFCMzcvBDU2KCFrLxFf/EABoBAQEAAwEBAAAAAAAAAAAAAAABAgMEBQb/xAAu
        EQEAAgIBAwMCBQQDAQAAAAAAAQIDESEEEjETQVEyYRQiM3GRBSOBoUJSsRX/2gAMAwEAAhEDEQA/AO0n
        c+fXtkGzOTkAmZ5Zg/kZqzeIdPS/VMuJrPvuzfEzN6m86Y8OaZ3MyG0qHtCntAVoCtAVoCtAVoDWgNaA
        1oQJEoYiECRAEiUCRAEiUCYAmUARAEygCJUAZQJgAYA3lCvAV4Hpk4mYNr4sUKJoqf5tUfzLf6aEaHqf
        zPSYVjvtv2h0T/bp2+8uatOhzitIFaA9oCtAe0BWgNaArQGtAa0BrShiIQJEASJQJEIEiUCRAAiUCRAE
        iUARAAiUCRKAIlQBEACJQMBCB6cjEEEGxGhnFMbbImYncI6tGm5JemrEm5YDcYnnddT3vGpjwy79+YU8
        RsfItRJe2Zpt/UA5i2TDtY9Ii+p1Zezu5qy7TZtrPaQPaArQFaArQFaArQGtGw1pQJEBiIAkSgSIQxEA
        CJUCRKAIgCRKAIlAEQAIgCRKAIlQBEoAiABlDCB1tDa9VT4rOONwAfIiapxxPhxV6m8eeW7SqB1DLmGF
        xNExqXfW0WjcJEcqQQbEZgyTG2UTqdwp7ew6hkrILLWBJA0Dj7X+d5jjn2ltyxE6vHuy7TY0ntAW7Afd
        gLdgNuwFaA1oDWlDEQBIl2BIgCRKBIhAkQBIlAEQgCJQBEoEiUARAmp7Oruu8lCs6/ElJ2X1AtMe+vjb
        OMd5jcRP8KlRCCQQQRqCLEdxM4lhMaRkTJAEQAIlAwNyR5Tf2E16PZ2A9AfznPl+p6HTT+RozW6EO1X/
        AJVJeO/UYdrAfW/pMa/VLbM/24hlWmbWe0BWgPaArQGtAVoDWlQNoDEQBIgMRKAIlAkQBIlAEQgSJQBE
        IAiUARKNr2WwtItUr1lDpQC7qHR6rE7oPMDdJmnNNuK192/BNK7yX8R/uV/ae3GZv5lQjkiXso7D85jX
        FWrTk6jLlnczx8R4Z2JWnilNjdwPCT9ocgb8Jtjhp3aPLm2E3NgCJQBEACJRtyPKaGF2n7pAipe2ZJbM
        k9LZTXbHuXRTP2RqIauAx61rgAhwL7lx4uxmq9Jq68OauSdK2IqM7XbK2QHwgcJhDfM8o7Soe0B7SBWl
        CtAVpA1pQxEBiIAkQBIlQJEASJQJEoAiAJEoAiEARKAYSo3th7LRUqYjE0XYKVWjTcFFqM18zfUC058l
        5tMVpLqpWMdJyZI/aPlNjccgXOnRorcG1JNzeIBAuBra59TMq07Z3vbly57ZeNRH7OWrtvMxFyCxIvrm
        ZmkRwm2fve8UrfI3a3w8YS2tKNZTc3BU3JsRYzdCwiMyEZEATA2YeUUoKlUKMGXVTcSTG40tZmJ3DsMH
        VwOII3nAquBcFilzbh1/OcF65K+PD3cObBk8zyLamxhTU1KZJA+0rZkDmDMaZN8S2ZcHbG6si02uY9oC
        3YCtAVoDWgMRAEiAJEoYiABEoEiECRKAIl2AIgMlMsQqgszEBQBcknQCJnXMkRMzqGjT2Qqm2IqMjA2N
        Okq1GA6tvBQfWYd9p+mP5ZzFKTq8/wActOnicOjIUwdEKhBUm5q5aEtz73mucd5jm0so6ykWjWONf7Ut
        rbTY71SoxYk+Fb5dgJtpSKxqHNky3zW3aXO4vFNVIJAFhYAaTIiNIIZJcNiGptdT3HA94SY20KtSniUV
        SQj7wtfO3O3O/KWJ0wiO2fsVf2fX3btSrEuiM5SogXfCi53WDHOwORGfOPVmJ5hvrFL77Z5+/v8As54z
        e1gtA2IeUUBQGgdn7OY9q2Fq03O81JSoJOZRlO6CT1BHpODPjit4mHu9DnnJhmtvMKNTDsliwsDxBBF+
        4ymW2HbMeUmFpKTdwSBwBtc9+UTv2I1E8rdXDUnRjTUoyDeILFgyjXXjMPzRPLbqlontjUwzrTNpNaA1
        oDEShiIAkQBIlAEQBIlQBEACJQBEoZWKm6kgjQg2I84InQS7fE3qZWOgGo3xN+IymkVQk6knubwIiJQB
        EoAwAJMugX8TUGYqVARmCHYEH1jUJ45V2N8zmTmSeJmQjMo2vcv8DfhMndHy8307/Be4f4G/CY7oPTv8
        Sf8Ah3+B/wAJjuj5PTv8SX8O/wAD/hMd0fJ6d/iWpsJCpqbwK3C23ha+s1ZZidOrpaWje4a4caXGeuc0
        us28OYjYJKu6bggHyMk6lYmY5hLjKNJk96jAMbb1O4Geh3R85riZidS33ik1748s+0zaTWgDaUMRCBIg
        ARKBIlAEQAIlQBEASJRGRKBIlEZEIAiVEZEoAiUARAjYSjW2X7NYnEgOFFOmcw9TLeHNQMz9Os1Xz1rw
        3U6e9/s1h7BG2eKz6Ubj/wB5q/F/Zu/B/dQxnsRikP8ALanWHf3bDuGy+c2V6qs+WFukvHhcAmDSMCQE
        BCjAkDgQgrSKe0BWgK0BrQGIlDEQBIgCRKgCJQBEASJQBEAGEqIyJQDCWABEADKgDKI2EqAMCMyjZ9kt
        mLiK5Ljep0gHYHRmJsoPTInymnPk7a8eXR0+Pvtz4eg1KgUXYgAThiJmXoWtFY3KhU2qPuoT1Jt8ptjD
        8uaeqjfEEm1R95CP7Tf62icM+xXqo94c2BNzjGBCiAkBgQHAkBAQH3YD2k2FaNhrSgSIDEQBIlAEQBIl
        QBEoAiABEojIgAwlQBEoAyiNhKAMIjMqAMojaUdl7BIBSrtxNRQewW/5mcfU+Yd3Saisyt4zEmo1/uj7
        I6c5lSvbDRlyTeyCZNRQKIEijAkUYEgICAQEgICAVpA4QnQSd0LETPg1pdk8GtCGIlAkS7AkQAIlAEQA
        IlQBEojIgARKAYSojMoAywAMCNpURtKAaUEcHVtf3VW3P3bW9bSd0fK9lvh0PsbXtSxacQFceYKn6D1m
        jPH5qy6MM6peF6VzmJtKTwrtj6I/1F8jf6S9ktfrU+QCa24aiAYEgMCQEBIJEQkgAXJ0ElrRWNyyrWbT
        qPLWw2AVc2szddBPKzdXa06rxD2MHRUpzbmVwTj8+XbERHgFSkrZMAe8zrktX6ZYXx0vGrQy8bgtzxLm
        vzX9p6fT9V6nFvLyeq6T0/zV8KRE7HCAiAJEyAEQAYSgDCIzKAIlEbSgDAjMqAaWBGZQqVFqjBEUszGw
        A4xMxEblYiZnUL+K9ncTTTf3VYAXIRt5gO3HyvMIzUmdNtumvEbb2ysDRwdNHdQ1d1DE2uVvwHIdeM02
        tbJOo8N1ezDXc+VltrNwVfMkyejHyxnqp9oClai7lmQU6jI1MuNGU8G8wO0TS0RxKxmpbzGplRItkeGR
        m7y5JjTmto401WIB8APhHA9TOmlYiHm5ss3n7KkzaXSrOF7SQSA1EAwJAYEg0tlUtXP9o/P8p53XZJ4o
        9T+n4o5vLRnnPUKAoDMoIIOhFjLEzE7hJrFomJYNenusV5G093HfvrEvnMlOy81RETY1gIlEZlAsIEZl
        AGVEbSiMygDAjaVANKNTYGyVrlnqX92mVgbbzWubngAPrNeXJ28Q34MUX5nw26T4akGNGmqOFsp3cyCR
        x1658pq7bT9Tb6uOsTNI5UMTtE0vG9RhyzJJ7CboxxPEQ4755pzMsyvt/eYtuFr8SwX5AGba4dQ5bdZ3
        TvSfCbSp1Tu5qx0DcexktjmGePPW/CXEYynTydrE8LEn0ExisyzvlrTzLN2ltQmy0m8JGbWzPTPSbaY/
        eXNmz74rLIm1yHgd5W2G4F6bCoOX2W/Qzy4zR4l9Nbo7a3Sds4qQbEEEagixE2xO/DkmJidSISIkEgMC
        Br7N/p/9jPI6z9V7fQfpf5lanI7SgKAoGPj/AOo3l9BPZ6X9KHg9Z+tKqZ0uVG0AGmUADAjMoBpURtKI
        2gRmUA0qAMo6L2Ybfo1qViM7hrZeJbWvzy+c583Fos68H5qWqZlINiLEagzb5ckxriXLbQrF6rk8GKgc
        gDadVI1Dy8tpteZV5k1lAKrULsWY3JNyYiNLMzM7kMIUBQPVqb2zGYPzE8WY2+ypfXMItqYEVk3lHjAu
        pH3h8Jkx3ms6XqcEZa90eXOLOt4w1kEiyDQ2bUsSp45jvODrce4i8ez0egzatNJ92hPNeuUBQBdgoJOg
        mVKzadQwveKV7pYtVt4knibz3aVitYh87e83tNp90TTJgjMoBpYEZlANKIzKgGlEZgRtKI2lQBlHY7OA
        pYNGTUoHJ5s2pPa/ynJP5r6l3xMUw7hnsxJuSSTqTnOiIcMzMzuWLtLZjFi9MX3s2XQg8SJvpkjxLizY
        J33VU6ezazH7FurEATPvq0RgyT7KrKQSDkQbEcjMmqY1waAoCgKB6Xs2/ulv1t2vPJyfU+p6bfpw0KDa
        iaLu/FbjTL//AC132ZmNixIVORPEmbvUnXDhnpq98zMrSYWiP9IeZLfWYzNp926uPFH/ABEcDRfRd09C
        R+0x7rwy9DDf20pYrANT8QO8vPiO/wCs2VyRbiXHm6W2PmOYHQxnBvX9ZxZejne6fw6cHXx4yfysiqp+
        8PWck4rx5iXdGbHPi0BfEION+2cyp0+S3s15OqxU91DE4gv0HL9Z6WDp4xx93ldR1Ns0/EKxnS5kbQgG
        lEZlEZlANKIzKgGlEZgRtKI2lQBlGhgdtNRpNSKCopvu3bdK314G+ec1zjiZ23VzTFe2UR2uf9sfi/aZ
        9rSE7ZP+2PxftL2psJ22f9sfj/aO0VMZjEqHeajY/EHsT38NpnWZjxLVkw1tzMKVSquW6pHO7b1/kJnF
        p92qemr7SiNXp85ltPwv3McR0+cbT8L9wnE/8fnGz8L93dpUZc1YjsZxzES7YtMeJaNPalkzF30yyB6m
        aZw8uyvV6rz5U6uNqN94jovhE2RSIc9s17e4UxVRdHbzNx85ZrE+zGMt48S08FjhU8LZNwto37zRfHrm
        Hbh6jv4ny1KVS+RnPaPd6OO+/wAssjaFAU3y+y2Y6cxN9Ld0PL6rF6d+PEq95m5iJkAEygCZURmABlAN
        LAjMojaUAZURtKI2gA0ojaVAGURtKAMo2tjbFRkGIxJIpH+nTGTVevRf876MmWd9tPP/AI6sWGsV78vj
        2j5a4xm4N2jTSgvJFAY9zMIxf9p2W6qfFI1CvUqs/wBpmb+4k/WbIiI8Oe17W8yoYrZlKp93dPxJkfMa
        GZxaYYOb2hgnoNZswfssNG/Q9JurO0UmmQAwPQZyhQFAUB1YggjUG47yTG1idTt0dN7gNzAM45h7Fbbi
        JRbYUkIQCbb17C9tNZMU8ynW1m0VmIZV5veWa8ASZQJMoAmABMCNjMgBgAZRGZUA0ojaURmBG0qAMojM
        olwOG99Wp0tN9wpPJfvH0vMbz2xtnjr3WiHS4qtvtlkqgKijRUGQAmuldQyy5O+2/b2RTJqKAoFfH4UV
        qbIddVPJuBmVZ1I4lhwPnN8MQGUegzlCgKAoCgWEx1UWs2QFgLC1vSa5x1n2boz5I92rgdoGpkcmHDgR
        0mi+KIehg6qb8e6avQSrqN1uDD8+cwiZrzDZfHTL5jU/LFrIUYq2oNjN8TuNvMvSaW7ZREysAkygSYAE
        ywAMoBjKIyYAGVANKI2lAGERmUXtl7Hq4okrZUBsXbS/IDiZryZa08ujD098vjw2R7NYVMqtdi39yp8r
        EzT6+SfEOv8AC4KfVb/aTBbBoJWWpRrb+6HG4xVjdkKixFufKS2a8xq0LTp8cW7qW35UZ0vLPAZmAFyQ
        AOJNhKkzEeVY7Ro3t7xfmR66TLst8NfrU3rayrAi4IIOhGYmLZE78OK2ktq9UD/de34jN9fCKz02GqsO
        4ImWx385QoCgKAoCgHRqFGVhwPy4iY2jcaZ0t22iXRXnI9aJ92ftxc6b/ECD5W/WZYveGjra/TZl3m5w
        hJgCTKAJlAkwAJlFnB7OeqC5Ip0xq7aeQ4zC14jj3bseCbx3TOo+Vg4bCLletUPxAqg8ha8ayT8Mp/Dx
        8ybC7JpVqgC1GCWuysAKnYEZHv8AKS97UrzC4sOPLfUTx9/K7UfCUvDToJUtkWYBh+I3JmEUyW5mdN18
        2DHxSu2diqNCrpS9y3BqZuvmnLtaboravvtzXyY7+a6/ZijDMaoo/eZ1TmLkgA9s7zZNoiu2qKTNu11+
        Prigq4ej4QqgEjUD9TqT1nLip3T32d/VZvSj0qMmdLzSgKAxNhflnKTOnLYvFNVa7HL7q8FH69Z1VrEQ
        8rJkm87lDKwaOxMQVcqT4SCc9ARnfplea8ldw6emvq2pG20aVJj7mmCzMSztqxJv3mMY5mOZbL9TG9Vh
        dw+KxLC5wlZhwKI9vmJhaKR/ybaWzTH6c/xK/MGwoCgKAoCgNCujoiyqP+I+k458vXr9MKe277tLImxc
        k2yGn7y4/MtXVbmlf8sa83uAxMugJMASYAEyifZ+H97VRDpe7HkozP8AnWY3tqu23Dj77xErmNxXvDYZ
        U1yRRkAB0lx07Y+5nzepPHiPCvM2ggYAPUVftMo7kCXW0m0R5k6OG0IPY3jRExPhPs6ihxFN2uCDrfK4
        WwvNWXfZMQ6umtHq12GtULszH7xJ9ZnWNRENN7Ta02n3BKwKBXxmKWku82d8lA1JmVazaWvJkikbljVt
        r1WvbdUHgBfLuZvjHEOK3U3lnzNoPAubJ2c+KqimmWV3Y6Ig1J/Sa8uSMddy6Om6e2e/ZX/M/EOrorQw
        g3cOi7wHiruAznna+g+U45i+Tm/8PXicXTxrFHPvafLMr+0eZ8VV+oaw8s5ujp414hyX/qE78zK5MWRQ
        FAUBQFAOhu7w3zZRmcr36TG29cM6a7vzNUbTp3+8Otv3mj0rO6OqovUMRcXUgiarU+XVjy8fl8Ku08Cl
        RGdBuuoubZbwGoPXrLS81nU+GOfDXJWbV8w5y86nlG10lQzKeRjRsdOnlc8ZYgXsLUpor2QhzTZAwJII
        NtQdO4mFqTMxzw348ta1njnWtq82OdHXrrTG85AH1PQSxEz4Y2vFY3LPxm1V92fdN4ibaEFRzzmyuOd8
        ufJ1Edv5fLDY3NzmTqTmTN7hmdio1GRgymxH+WkmInyyrMxO4dBW2tSQ5EsR8GdvOaIxzLvnqKVTYTGJ
        WB3b5agi1vymNqzVnjyRfwsTFsV8ZjEoi7anRRqZlWsy15MtaRywMfjDWINt0KCAL3nRWvbDgy5ZvO1a
        ZNRoCBhHT7GdaGEZr2NYs9RuIpoSqr6hj5zkyR3ZP2et09oxdPx5t5/aPZj43ab1LqPChytxI6n9Jvrj
        iHDkz2vx7KM2NDsJxvWKAoCgKAoCgKBZ2fWKOOTEAj6Ga8ldw34Mk1tHw3Va2Z049pyzG3qVt2ztVUYV
        cglD/tZj6mZdt/u19+GPEQkOHouP6aW5p4fpEWvHiVmmK/msf4Zm0MAaVmU7yE2vxU8jN+PJ3cT5cefp
        /T5rzCg7hcyQB1NpuiNuSZiPLncftBqrGxKpwAyv1M6KUiIedlzTaePCPC42pSORJHFSbqf0lmkSxplt
        XwWMxbViC1hYWAGmuv09IrXtMmSbzuVeZNZQFAOhT32VfiYL2uYmdQta7mIdQAlJQLhFGWZt/hnLzZ6k
        dtI0PCOtZglJldjwBztz7TG35Y3LPF/dt205lon2aw9zVxLl9BbeKU1HIWzPHj5Tn/FXnijv/wDmYY/P
        mnf+oV8RsnZrjdUNSPB0L5eTXB9JnXJnjmeWnJ03Q34jj78sH/x2r/EpQBDK4LrWGaGmPtN3FwLcyOd5
        0/iK9k2n+Hmx/T7+tGOJ4nnf2dGlHCYQblGilRxk1WoA5vxz/IWE5P7mXm06h6mun6eO3HWJn3mUOJrC
        qLPSosORpLl2Oo9ZsrXt8TP8tN8vqRq1Y/hibW3adEUlI+0PDfPduT6XtOjHubblwZ9Vx9sMSb3CUDsJ
        xvWKAoCgKAoCgKA6GxB5EGSVidTtJiMQ1Q3Y5cBwElaxDPJktedyimTWkw9dqZuvmOBExtWLRy2Y8k0n
        cN2ooq02QGwqoQCNVJHhPcG05fptv4er+pSa/MPOcZhsSoBrU6wA41FbdHmcp6tb0nxMPl8uLNX66z/C
        nM2g8BQFAUBQCo1NxlYaqwb0N4mNrWdTsWIrtUbeY3PDkByEkRpb3m87l2/sPs8JQNcjx1iQDypqbAeZ
        BPpPM63Ju3b8PpP6P08VxepPmf8AxJtnEFqhW/hTId+J/wA5TLBTVdsOtyzbJ2+0OdxG2kU2RS/W+6PL
        KdcYpny8q/VRE8QmwPtHuhkINMOLXvvBefUX0/8Akwv0++W3D1/bE18bQbT2nueCmQWsCW1AB0t1mdMe
        +Zas2ft4qyhjq17+8f1y9NJt7K/Dl9W/yjrVS7FmNydT5WmURpha02ncghCgdhON65QFAUBQFAUBQFAU
        BQFA3cB/STt+c5b/AFPUwfpwtCqR17zXNXRF593L+12x6K0v4mmopsGVXVR4H3ja9uB7Tr6XNabdkvJ/
        qXSY4x+tWNTv/DkJ3vCKAoCgKAoFnZuE9/Wp0t7d9427vWvbymOS3bXbbgx+pkikz5ei1WGDoU6aDeCg
        U1LdBqbazx6x6t5mX1mS34XFWtedcOb2rULU6zHVlYnz1nfjjUxDw+otNq2tLlZ2PKKQK0BQFAUBQP/Z
</value>
  </data>
</root>